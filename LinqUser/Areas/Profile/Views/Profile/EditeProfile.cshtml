@model LinqUser.Areas.Services.ProfileService.EditeProfileUser.EditeProfileUserDto

@{
    ViewData["Title"] = "EditeProfile";
}

<h1>EditeProfile</h1>

<h4>EditeProfileUserDto</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="EditeProfile">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Bio" class="control-label"></label>
                <input asp-for="Bio" class="form-control" />
                <span asp-validation-for="Bio" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProfileImageUrl" class="control-label"></label>
                <input asp-for="ProfileImageUrl" class="form-control" />
                <span asp-validation-for="ProfileImageUrl" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label>لینک‌های اجتماعی</label>
                <div id="socialLinksContainer">
                    @for (var i = 0; i < Model.SocialLinks.Count; i++)
                    {
                        <div class="input-group mb-2">
                            <input type="text" name="SocialLinks[@i].PlatformName" value="@Model.SocialLinks[i].PlatformName" placeholder="نام پلتفرم" class="form-control">
                            <input type="text" name="SocialLinks[@i].Url" value="@Model.SocialLinks[i].Url" placeholder="آدرس لینک" class="form-control">
                            <button type="button" class="btn btn-danger" onclick="removeSocialLink(this)">❌</button>
                        </div>
                    }
                </div>
                <button type="button" class="btn btn-success mt-2" onclick="addSocialLink()">افزودن لینک</button>
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
   
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script>
    var linkIndex = @Model.SocialLinks.Count;

    function addSocialLink() {
        var container = document.getElementById("socialLinksContainer");

        var div = document.createElement("div");
        div.classList.add("input-group", "mb-2");

        var platformInput = document.createElement("input");
        platformInput.type = "text";
        platformInput.name = `SocialLinks[${linkIndex}].PlatformName`;
        platformInput.placeholder = "نام پلتفرم";
        platformInput.classList.add("form-control");

        var urlInput = document.createElement("input");
        urlInput.type = "text";
        urlInput.name = `SocialLinks[${linkIndex}].Url`;
        urlInput.placeholder = "آدرس لینک";
        urlInput.classList.add("form-control");

        var removeBtn = document.createElement("button");
        removeBtn.type = "button";
        removeBtn.innerText = "❌";
        removeBtn.classList.add("btn", "btn-danger");
        removeBtn.onclick = function () { container.removeChild(div); };

        div.appendChild(platformInput);
        div.appendChild(urlInput);
        div.appendChild(removeBtn);
        container.appendChild(div);

        linkIndex++;
    }
</script>
3️⃣ اطمینان از مقداردهی SocialLinks در EditeProfileUserDto
مطمئن شو که در EditeProfileUserDto مقدار SocialLinks خالی نباشد، مثلاً در EditeProfileUserService مقداردهی اولیه را انجام بدهی:

csharp
Copy
Edit
public async Task<EditeProfileUserDto>
    GetProfileForEdit(ClaimsPrincipal userClaims)
    {
    var userId = userClaims.FindFirstValue(ClaimTypes.NameIdentifier);
    var profile = await _context.profileUsers
    .Include(p => p.SocialLinks)
    .FirstOrDefaultAsync(p => p.UserId == userId);

    if (profile == null)
    return new EditeProfileUserDto { SocialLinks = new List<SocialLinkDto>
        () };

        return new EditeProfileUserDto
        {
        FirstName = profile.FirstName,
        LastName = profile.LastName,
        Bio = profile.Bio,
        ProfileImageUrl = profile.ProfileImageUrl,
        SocialLinks = profile.SocialLinks.Select(s => new SocialLinkDto
        {
        PlatformName = s.PlatformName,
        Url = s.Url
        }).ToList()
        };
        }
