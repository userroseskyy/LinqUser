@model LinqUser.Areas.Services.ProfileService.EditeProfileUser.EditeProfileUserDto

@{
    ViewData["Title"] = "EditeProfile";
}

<h1>EditeProfile</h1>

<h4>EditeProfileUserDto</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="EditeProfile" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Bio" class="control-label"></label>
                <input asp-for="Bio" class="form-control" />
                <span asp-validation-for="Bio" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label for="ProfileImageUrl" class="control-label">تصویر پروفایل</label>
                <div>
                    <img id="profileImagePreview" src="@Model.ProfileImageUrl" alt="Profile Image" class="img-thumbnail" style="width: 100px; height: 100px; cursor: pointer;" onclick="document.getElementById('ProfileImageInput').click();" />
                    <input type="file" id="ProfileImageInput" name="ProfileImage" style="display: none;" onchange="previewImage(event)" />
                </div>
                <span asp-validation-for="ProfileImageUrl" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label>لینک‌ها</label>
                <div id="socialLinksContainer">
                    @if (Model.SocialLinks != null && Model.SocialLinks.Any())
                    {
                        for (int i = 0; i < Model.SocialLinks.Count; i++)
                        {
                                    <div class="input-group mb-2 social-link-item">
                                        <input type="text" name="SocialLinks[@i].PlatformName" value="@Model.SocialLinks[i].PlatformName" placeholder="نام پلتفرم" class="form-control platform-name" />
                                        <input type="text" name="SocialLinks[@i].Url" value="@Model.SocialLinks[i].Url" placeholder="لینک" class="form-control url" />
                                        <button type="button" class="btn btn-danger remove-link">-</button>
                                    </div>
                        }
                    }
                </div>
                <button type="button" class="btn btn-success mt-2" onclick="addSocialLink()">افزودن لینک جدید</button>
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<script>
    let linkIndex = @Model.SocialLinks?.Count ?? 0;

    function addSocialLink() {
        let container = document.getElementById("socialLinksContainer");
        let newLink = document.createElement("div");
        newLink.classList.add("input-group", "mb-2", "social-link-item");
        newLink.innerHTML = `
            <input type="text" name="SocialLinks[${linkIndex}].PlatformName" placeholder="نام پلتفرم" class="form-control platform-name" />
            <input type="text" name="SocialLinks[${linkIndex}].Url" placeholder="آدرس لینک" class="form-control url" />
            <button type="button" class="btn btn-danger remove-link">-</button>
        `;
        container.appendChild(newLink);
        linkIndex++;
    }

    document.addEventListener("click", function (event) {
        if (event.target.classList.contains("remove-link")) {
            event.target.closest(".social-link-item").remove();
            updateIndexes();
        }
    });

    function updateIndexes() {
        let links = document.querySelectorAll(".social-link-item");
        links.forEach((link, index) => {
            link.querySelector(".platform-name").setAttribute("name", `SocialLinks[${index}].PlatformName`);
            link.querySelector(".url").setAttribute("name", `SocialLinks[${index}].Url`);
        });
        linkIndex = links.length;
    }

    function previewImage(event) {
        const file = event.target.files[0];
        const reader = new FileReader();

        reader.onload = function(e) {
            document.getElementById('profileImagePreview').src = e.target.result;
        };

        if (file) {
            reader.readAsDataURL(file);
        }
    }
</script>